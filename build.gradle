plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	all {
		exclude group: 'commons-logging', module: 'commons-logging'
	}

}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// seleniumhq
	implementation 'org.seleniumhq.selenium:selenium-java:4.10.0'

	implementation('org.springframework.boot:spring-boot-starter-logging') {
		exclude group: 'org.slf4j', module: 'slf4j-simple'
	}


	//jwt
	implementation "io.jsonwebtoken:jjwt-api:0.11.5"
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // JSON 파싱을 위한 Jackson 추가

	// Lombok 및 기타 의존성
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//googlecalendar
	// Google API Client Libraries (안정성 높은 이전 버전 또는 권장 버전)
	implementation 'com.google.api-client:google-api-client:2.0.0'
	implementation 'com.google.auth:google-auth-library-oauth2-http:1.18.0'
	implementation 'com.google.apis:google-api-services-calendar:v3-rev20220715-2.0.0'
	implementation 'com.google.http-client:google-http-client-gson:1.44.1'


	//googleMaps
	implementation 'com.google.maps:google-maps-services:0.18.0'

	//firebase
	implementation 'com.google.firebase:firebase-admin:9.2.0'

	//swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

	implementation 'org.json:json:20240303'



}

tasks.named('test') {
	useJUnitPlatform()
	systemProperty "spring.profiles.active", "test" // ⬅️ 테스트 시 'test' 프로파일로 실행
}


// JAR 파일명 고정
bootJar {
	archiveFileName = "Easeplan-0.0.1-SNAPSHOT.jar"
	enabled = true
}
jar {
	enabled = false
}
sourceSets {
	main {
		resources {
			srcDirs = ["src/main/resources"]
			// includes 제거 (모든 리소스 포함)
		}
	}
}


// build.gradle 하단에 추가

tasks.named('processResources') {
	duplicatesStrategy = DuplicatesStrategy.INCLUDE
}


//apply plugin: 'application'
//
//mainClassName = 'CalendarQuickstart'
//sourceCompatibility = 11
//targetCompatibility = 11
//version = '1.0'
//
//repositories {
//	mavenCentral()
//}

